// Package declaration organizes this class within the project's structure.
package com.example.studentApp.model;

// Import statement for ignoring specific fields during JSON serialization.
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

// Import statements for JPA annotations used for entity mapping.
import jakarta.persistence.*;

// The @JsonIgnoreProperties annotation ensures that fields related to Hibernate's lazy-loading mechanisms
// (like hibernateLazyInitializer and handler) are excluded from JSON responses.
// This prevents unnecessary or problematic data from being serialized into JSON.
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})

// Marks this class as a JPA entity, indicating it is mapped to a database table.
@Entity
public class Grade {

    // Specifies the primary key of the entity.
    @Id
    // Indicates that the ID is auto-generated by the database using the identity strategy.
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Represents the letter grade (e.g., "A", "B", "C").
    private String letter;

    // Represents the numerical score associated with the grade.
    // For example: A = 4.0, B = 3.0, C = 2.0, D = 1.0, F = 0.0.
    private double score;

    // --- Getters and Setters ---
    // These methods provide encapsulated access to the fields and allow modifications if needed.

    /**
     * Retrieves the ID of the grade.
     * @return the unique identifier of the grade.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the ID of the grade.
     * @param id the unique identifier to assign to the grade.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Retrieves the letter grade.
     * @return the letter grade (e.g., "A", "B", "C").
     */
    public String getLetter() {
        return letter;
    }

    /**
     * Sets the letter grade.
     * @param letter the letter grade to assign (e.g., "A", "B", "C").
     */
    public void setLetter(String letter) {
        this.letter = letter;
    }

    /**
     * Retrieves the numerical score of the grade.
     * @return the numerical score (e.g., 4.0 for "A").
     */
    public double getScore() {
        return score;
    }

    /**
     * Sets the numerical score of the grade.
     * @param score the numerical score to assign (e.g., 4.0 for "A").
     */
    public void setScore(double score) {
        this.score = score;
    }
}
